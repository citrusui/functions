#!/usr/bin/env bash

export UPDATE="update" # `shellcheck`: workaround for line 30
export UPGRADE="full-upgrade"

function cache() {
  if [ "$(which apt)" ]; then
    for kernel in $(dpkg -l *linux-image-[0-9]* | grep ii | grep -v "$(uname -r)" | awk '{printf "%s ",$2}') # Remove old Linux kernels
    do
      sudo apt purge $kernel
    done
    sudo apt autoremove
  fi
  if [ -d ~/.nvm ]; then
    nvm cache clear
    for node in $(nvm ls --no-colors | grep -vE '$(nvm current)|default|lts' | awk '{printf "%s ",$1}' | sed 's/->//g') # nvm doesn't let you (un)install in one fell swoop for some reason
    do
      nvm uninstall $node # delete Node.js versions not in use
    done
  fi
}

function update() {
  if [ "$(uname)" == "Darwin" ]; then
    sudo softwareupdate -ia # fetch and install latest updates from the Mac App Store
  elif [ "$(which apt)" ]; then
    echo ""
    echo "Running APT..."
    echo ""
    sudo apt $UPDATE # refresh package lists
    sudo apt $UPGRADE # install updated packages
  fi
  if [ -d ~/.nvm ]; then
    echo ""
    echo "Running nvm..."
    echo ""
    nvm install stable # install the latest Node.js release
  fi
  if [ "$(which apm)" ]; then
    echo ""
    echo "Running apm..."
    echo ""
    apm update # update Atom packages
  fi
}

export -f cache
export -f update
